#include "common.h"

/*
	访问这模式：封装一些作用于某种数据结构中的各元素的操作，它可以在不改变这个数据结构的前提下定义作用于这
			   些元素的新的操作。

	组成部分： 抽象访问者，具体访问者。 定义一些操作 各个元素的 方法，方法数目和，元素的具体类型个数一致。
			  每个方法的名字都需要相同，但是参数类型是不同的元素类型

			  当需要增加一些操作的时候，只需要扩展一个 子类，该子类对操作各个元素的方法和数目进行
			  重写。
			  
			  抽象元素类，具体元素类。 实现 接受访问者访问的方法，accept。 参数就是 抽象访问者。

			  元素组织者： 管理元素对象的数据结构，提供访问方法。
*/

#include "Home.h"

int main()
{

	Home h;

	Dog d1, d2;
	Cat c1, c2;

	h.Add(&d1);
	h.Add(&d2);
	h.Add(&c1);
	h.Add(&c2);

	Owner o1;

	SomeOne s1;

	h.Action(&o1);
	h.Action(&s1);


	return 0;
}

