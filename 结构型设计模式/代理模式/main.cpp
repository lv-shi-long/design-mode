#include "common.h"

/*
	代理模式： 当某两个类之间无法直接进行操作或者调用时，可以设置一个中间代理类。
			  代理模式分为静态代理和动态代理，由于动态代理比较复杂，这里只接受静态代理。

			  比如一个人要去火车站买票，但是又不能去 调用火车站的 买票接口，那么可以设置一个
			  火车票待售点。通过这个代理类 售卖火车票。


	组成部分： 抽象主题类。类比 一个接口，改接口定义了卖票的功能。
	          真实主题类。类比火车站，实现了卖票的功能。
			  代理类。 一个也实现了 卖票功能的类，但是是通过调用 真实主题类的卖票接口来实现功能的，它依赖了
			  真实主题类。

*/

#include "TrainProxy.h"

int main()
{
	TrainProxy* tp = new TrainProxy();
	tp->Sell();

	return 0;
}

